"""
请根据上述定义和特征，判断用户输入的问题属于哪个类别（Answer 或 Discussion）：

---
                                                                 
#### **Answer：直接回答类问题 / 非问题的问候语**

**定义**：  
该类问题或语句具有明确的答案，或者不构成实质性提问的问候语，可以通过简短的事实性信息直接回应，无需进一步探讨或推理。

**特征**：
- 不涉及推理、复杂计算或者策略性思考
- 公认正确答案，不需要计算
- 回答简洁、事实性强，通常只需一步至三步计算或确认
- 可能涉及常识、定义、时间、人物、地点等

**典型示例**：
- “今天星期几？”
- “你好”
- “谁写了《红楼梦》？”

---

#### **Discussion：讨论类问题**

**定义**：  
该类问题没有唯一正确答案，通常需要进行推理、权衡利弊、情境判断、观点交流或多因素分析。适合用于引发深入思考、提出建议或展开讨论。

**特征**：
- 用户明确或隐含地要求深入讨论、分析、推理、建模或多角度思考等
- 没有唯一正确答案
- 常包含“你认为……”、“是否应该……”、“如何应对……”、“有什么影响……”、“哪种更好……”等表达
- 你无法确定一个绝对正确的答案
- 可能涉及假设情境、权衡利弊或多因素决策

**典型示例**：
- “我们应该如何解决气候变化问题？”
- “人工智能会取代人类的工作吗？”

"""


Solution_Generation_prompt="""
你是一个专业的智能助手，负责帮助用户处理他们提出的问题，并为后续的解决方案生成或讨论做好准备。

请按照以下流程执行：

第一步：问题类型判断

分析用户输入的问题，判断其属于以下哪一类：

1. **直接回答类问题，或者非问题的问候语（Direct_Answer)**  
   示例：  
   - “今天星期几？”  
   - “北京的人口是多少？”  
   - “你好”  

   特征：  
   - 有明确答案  
   - 不需要进一步信息  
   - 可以通过简短、事实性内容回答

2. **讨论类问题（Discussion)**  
   示例：  
   - “我们应该如何解决气候变化问题？”  
   - “人工智能会取代人类的工作吗？”  
   - “我应该换工作吗？”  

   特征：  
   - 没有唯一正确答案  
   - 需要多角度分析、观点交流或背景信息  
   - 常涉及建议、决策、策略、情境判断等

第二步：响应处理逻辑

1. **如果是【直接回答类问题】**  
- 直接给出简洁准确的回答。
- `category` 设置为 "answer"
- `response` 中包含该回答

2. **如果是【讨论类问题】**  
请完成以下子任务：

  1)**评估问题完整性与准确性**
   - 判断问题是否模糊不清、缺少关键信息或背景
   - 是否需要用户提供更多细节以便深入分析

  2)**请求补充信息（如需要）**
   - 明确列出你需要用户补充的内容
   - 使用引导式语句鼓励用户提供更多信息

  3)**生成更清晰的新问题（Refined Question）**
   - 在现有信息基础上，重新表述问题，使其更具体、完整、便于后续讨论
   - 保留原意的同时，提高表达的清晰度和可操作性

第三步：统一输出格式

请严格按照如下 JSON 格式输出结果：

{
  "reason": "判断依据和分析过程",
  "category": "问题类别，取值为 \"discussion\" 或 \"answer\"",
  "response": "如果是讨论类问题，则提供需补充的信息点及新问题；若是直接回答类问题，则为答案。"
}

示例一：

用户提问：
“我该不该创业？”

系统输出：
{
  "reason": "这是一个开放性问题，没有唯一正确答案，且缺乏背景信息，适合展开讨论。",
  "category": "discussion",
  "response": "我们可能需要了解以下信息来更好地帮助您：\\n- 您目前的职业状况是什么？\\n- 您是否有创业项目或行业方向？\\n- 您的资金和资源情况如何？\\n- 您对风险的承受能力如何？\\n\\n基于已有信息，我们可以将您的问题重新表述为：\\n> 我目前是一名在职员工，有两年工作经验，想从零开始创业，但担心资金不足和失败风险，是否值得尝试？"
}

示例二：

用户提问：
“怎么设置路由器密码？”

系统输出：
{
  "reason": "这是一个具有明确操作步骤的事实性问题，可以直接回答。",
  "category": "answer",
  "response": "这是可以直接回答的问题。\\n步骤如下：\\n1. 打开浏览器，输入路由器管理地址（如 192.168.1.1）。\\n2. 输入默认用户名和密码（通常是 admin/admin 或查看说明书）。\\n3. 找到“无线设置”或“安全设置”。\\n4. 设置新的 Wi-Fi 密码并保存。"
}
"""



"""
#### **第二步：如果是讨论类问题，请完成以下任务：**

1. **评估问题的准确性与完整性**  
   - 是否存在模糊、不明确或缺失的信息？
   - 是否需要用户提供更多背景、限制条件或目标？

2. **生成反馈请求（如需要）**  
   - 如果问题不够清晰，请列出你需要用户补充的具体信息。
   - 示例：
     > 您能否提供更多关于您当前工作的内容、薪资水平以及您希望换工作的具体原因？这样我可以更好地帮您分析利弊。

3. **整理成一个更清晰的新问题（Refined Question）**  
   - 基于现有信息，将原始问题重新表述为一个更准确、完整的版本，方便后续讨论使用。
   - 示例：
     - 原始问题：“我应该换工作吗？”
     - 新问题：“在目前这份工作中，我薪资一般、晋升空间有限且工作压力大，是否值得为了更好的发展而跳槽？”

---

#### **第三步：输出格式要求**

根据你的判断结果，选择以下一种输出方式：

- **如果问题是 Direct Answer 类型：**  
  直接给出简洁明了的回答。

- **如果问题是 Discussion 类型：**
  - 输出：“这是一个讨论类问题。”
  - 列出需要用户补充的信息（如有）
  - 提供一个清晰的新问题版本（Refined Question）

---

### **示例一：**

**用户提问：**  
“我该不该创业？”

**系统输出：**  
这是一个讨论类问题。

我们可能需要了解以下信息来更好地帮助您判断：
- 您目前的职业状况是什么？
- 您是否有创业项目或行业方向？
- 您的资金和资源情况如何？
- 您对风险的承受能力如何？

基于已有信息，我们可以将您的问题重新表述为：
> 我目前是一名在职员工，有两年工作经验，想从零开始创业，但担心资金不足和失败风险，是否值得尝试？

---

### **示例二：**

**用户提问：**  
“怎么设置路由器密码？”

**系统输出：**  
这是一个可以直接回答的问题。  
步骤如下：  
1. 打开浏览器，输入路由器管理地址（如 192.168.1.1）。  
2. 输入默认用户名和密码（通常是 admin/admin 或查看说明书）。  
3. 找到“无线设置”或“安全设置”。  
4. 设置新的 Wi-Fi 密码并保存。  
"""


'''Now the first round of debate for both sides has ended.

Affirmative side arguing:
要解决这个问题，我们需要分两部分来考虑：首先，用初始的10分钱购买桃子；其次，利用吃桃子后得到的桃核进行兑换，尽可能多地获取额外的桃子。

### 第一步：用10分钱购买桃子

1. 用10分钱可以购买10个桃子。
2. 吃掉这些桃子后，会得到10个桃核。

### 第二步：利用桃核兑换桃子

1. 每3个桃核可以兑换1个桃子，因此10个桃核可以兑换3个桃子。
2. 吃掉这3个桃子后，会得到3个桃核。
3. 用这3个桃核再兑换1个桃子，吃掉后得到1个桃核。
4. 最后剩下的1个桃核无法兑换桃子。

### 总结

- 初始购买：10个桃子
- 通过兑换桃核获得：3 + 1 = 4个桃子

因此，总共可以吃 \\(10 + 4 = 14\\) 个桃子。

这个分析考虑了所有可能的兑换机会，确保了最大化利用每一分钱和每个桃核。

Negative side arguing: 我同意你的分析过程，但需要进一步优化以确保我们没有遗漏任何可能的桃子获取途径。让我们重新审视整个过程，确保每一步都合理且最大化收益。

### 第一步：用10分钱购买桃子

1. 用10分钱可以购买10个桃子。
2. 吃掉这些桃子后，会得到10个桃核。

### 第二步：利用桃核兑换桃子

1. 每3个桃核可以兑换1个桃子，因此10个桃核可以兑换3个桃子。
2. 吃掉这3个桃子后，会得到3个桃核。
3. 用这3个桃核再兑换1个桃子，吃掉后得到1个桃核。
4. 最后剩下的1个桃核无法兑换桃子。

### 第三步：再次利用剩余桃核

1. 在第二步结束后，我们有1个桃核。如果能再次获得桃核，我们可以继续兑换桃子。
2. 为了再次获得桃核，我们需要再次购买桃子。用1分钱购买1个桃子，吃掉后得到1个桃核。
3. 现在我们有2个桃核，再兑换1个桃子，吃掉后得到1个桃核。
4. 现在我们有3个桃核，可以兑换1个桃子，吃掉后得到1个桃核。
5. 最后剩下的1个桃核无法兑换桃子。

### 总结

- 初始购买：10个桃子
- 通过兑换桃核获得：3 + 1 + 1 + 1 = 6个桃子

因此，总共可以吃 \\(10 + 6 = 16\\) 个桃子。

### 详细解释

1. **初始购买**：用10分钱购买10个桃子。
2. **第一次兑换**：10个桃核兑换3个桃子，吃掉后得到3个桃核。
3. **第二次兑换**：3个桃核兑换1个桃子，吃掉后得到1个桃核。
4. **第三次兑换**：1个桃核兑换1个桃子，吃掉后得到1个桃核。
5. **第四次兑换**：1个桃核兑换1个桃子，吃掉后得到1个桃核。

通过这种方法，我们确保了每一步都利用了所有的桃核进行兑换，从而最大化了桃子的总数。最终答案是16个桃子。

You, as the moderator, will evaluate both sides\' answers and determine whether there is a clear preference for one of the answer candidates.

- If there IS a clear preference, please summarize your reasons for supporting either the Affirmative or Negative side, and provide the final answer you believe to be correct in the "debate_answer" field. The debate will then conclude.
- If there is NO clear preference, please leave the "debate_answer" field EMPTY, and explain why neither side has yet convinced you. The debate will proceed to the next round.

Now, please output your evaluation in strict JSON format as follows:
{
  "Whether there is a preference": "Yes or No",
  "Supported Side": "Affirmative or Negative (if applicable), Both (if both sides are valid), or empty",
  "Reason": "Your evaluation reasoning",
  "debate_answer": "Final answer (if applicable), Multiple answers (if both sides are valid), or empty"
}

Please strictly output in JSON format and do not include any irrelevant content.'''




"judge_prompt_last2": "Therefore, ##debate_topic##\nPlease summarize your reasons and give the final answer that you think is correct. Now please output your answer in json format, with the format as follows: {\"Reason\": \"\", \"debate_answer\": \"\"}. Please strictly output in JSON format, do not output irrelevant content.",
